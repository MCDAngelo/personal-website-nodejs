 <%- include('partials/header.ejs') %>
 
 <!-- Header -->
 <header id="header">
    <div class="inner">
      <a href="/" class="image avatar"><img src="./images/maria-nyc-sq.png" alt="" /></a>
      <h1><strong>Hi, I'm Maria</strong>, a cognitive psychologist<br />
        turned data scientist and developer,<br />
        who loves the outdoors.</h1>
    </div>
  </header>

  <!-- Main -->
  <script
  src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.2.146/pdf.min.js"
  integrity="sha512-hA0/Bv8+ywjnycIbT0xuCWB1sRgOzPmksIv4Qfvqv0DOKP02jSor8oHuIKpweUCsxiWGIl+QaV0E82mPQ7/gyw=="
  crossorigin="anonymous"
  referrerpolicy="no-referrer"
></script>
  <div id="main">
    <canvas id="pdf-container"></canvas>

<script>
	pdfjsLib
		.getDocument('./public/<%= file %>')
		.promise.then(function (pdf) {
			pdf.getPage(1).then(function (page) {
				// Sets the scale of the page when it's rendered.
				const scale = 1.5;

				// Returns the viewport for the page, which defines the visible area of the page.
				const viewport = page.getViewport({ scale: scale });

				// Gets the canvas element on the webpage that will be used to render the PDF page.
				const canvas = document.getElementById('pdf-container');

				// Gets the 2D rendering context for the canvas element.
				const context = canvas.getContext('2d');

				// Sets the height and width of the canvas element to match the viewport.
				canvas.height = viewport.height;
				canvas.width = viewport.width;

				// Sets the canvas context and viewport for rendering the page.
				const renderContext = {
					canvasContext: context,
					viewport: viewport,
				};

				// Renders the page on the canvas element with the defined context and viewport.
				page.render(renderContext);
			});
		});
</script>

  </div>

  <%- include('partials/footer.ejs') %>
